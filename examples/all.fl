/*
    Floral Example - All syntax usage
    Used for lexer test cases
*/

fn greet(name: String): String {
    return fmt("Hello, {name}!")
}

// OOP
trait Updatable {
    fn update(dt: float)
}

struct Entity impl Updatable {
    id: int
    pos: Vec2

    fn init(id: int, pos: Vec2) {
        self.id = id
        self.pos = pos
    }
}

struct Player impl Entity {
    health: int

    fn init(id: int, pos: Vec2, health: int) {
        super.init(id, pos)
        self.health = health
    }

    fn update(dt: float) {
        print("Player {self.id} is updating.")
        self.pos.x += dt * 5.0
    }

    fn take_damage(amount: int) {
        self.health -= amount
    }
}

// Operator override
struct Vec2 {
    x: float
    y: float

    fn Operator::add(other: Self): Self {
        return Self(self.x + other.x, self.y + other.y)
    }

    fn Operator::mult(scalar: float): Self {
        return Self(self.x * scalar, self.y * scalar)
    }
}